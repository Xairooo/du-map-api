# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - run: npm install @openapitools/openapi-generator-cli -g
      - run: npx @openapitools/openapi-generator-cli generate -i du-map-api.yaml -g java -o java-apachehttp --additional-properties=interfaceOnly=true,groupId=de.xairooo.du,artifactId=du-map-api-apachehttp-client,basePackage=de.xairooo.du.map,apiPackage=de.xairooo.du.map.api,modelPackage=de.xairooo.du.map.model,invokerPackage=de.xairooo.du.map.client,developerName=xairooo,developerEmail=xairooo@xairooo.de,scmConnection=scm:git:git@github.com:xairooo/du-map-api.git,library=apache-httpclient

      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "<source>1\\.7<\\/source>\\s+<target>1\\.7<\\/target>"
          replace: "<release>11</release>"
          include: java-apachehttp/pom.xml
          regex: true

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "temurin"
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }}/java # location for the settings.xml file

      - name: Build with Maven
        run: mvn -Dmaven.resolver.transport=wagon -B package --file java-apachehttp/pom.xml
